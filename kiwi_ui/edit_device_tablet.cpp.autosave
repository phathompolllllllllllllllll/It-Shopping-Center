#include "edit_device_tablet.h"
#include "ui_edit_device_tablet.h"

Edit_device_tablet::Edit_device_tablet(QWidget *parent, std::string cat)
    : QDialog(parent)
    , ui(new Ui::Edit_device_tablet)
{
    ui->setupUi(this);
    cata = cat;
}

Edit_device_tablet::~Edit_device_tablet()
{
    delete ui;
}



std::string brand_ta, model_ta, name_ta, display_ta, processor_ta;
std::string os_ta;
std::string storage_ta;
std::string camera_ta;
int quantity_ta;
double price_ta;
double battery_mAh_ta;
std::string bluetooth_ta;
int resolution_1_ta, resolution_2_ta;
double dimension_ta1, dimension_ta2, dimension_ta3;
double weight_ta;
double brightness_nits_ta;
std::string wifi_ta;
bool have_pen_ta = false;
std::string Internal_Memory_ta;
std::string External_Memory_ta;
std::string speaker_ta;
bool biometric_ta1 = false, biometric_ta2 = false, biometric_ta3 = false;
bool is_waterproof_ta = false;

void Edit_device_tablet::on_OK_btn_clicked()
{
    Tablet tablet;
    
    price_ta = ui->price_lineEdit->text().toDouble();
    quantity_ta = ui->quantity_lineEdit->text().toInt();
    brand_ta = ui->brand_lineEdit->text().toStdString();
    model_ta = ui->model_lineEdit->text().toStdString();
    name_ta = ui->des_lineEdit->text().toStdString();
    display_ta = ui->display_lineEdit->text().toStdString();
    resolution_1_ta = ui->resolution_lineEdit_1->text().toInt();
    resolution_2_ta = ui->resolution_lineEdit_2->text().toInt();
    processor_ta = ui->processor_lineEdit->text().toStdString();
    os_ta = ui->os_lineEdit->text().toStdString();
    camera_ta = ui->camera_spec_lineEdit->text().toStdString();
    storage_ta = ui->storage_lineEdit->text().toInt();
    camera_ta = ui->camera_spec_lineEdit->text().toStdString();
    battery_mAh_ta = ui->battery_lineEdit->text().toDouble();
    bluetooth_ta = ui->bluetooth_lineEdit->text().toDouble();
    dimension_ta1 = ui->dimension1_lineEdit->text().toDouble();
    dimension_ta2 = ui->dimension2_lineEdit->text().toDouble();
    dimension_ta3 = ui->dimension3_lineEdit->text().toDouble();
    weight_ta = ui->weight_lineEdit->text().toDouble();
    brightness_nits_ta = ui->wifi_lineEdit->text().toDouble();
    wifi_ta = ui->wifi_lineEdit->text().toDouble();
    Internal_Memory_ta = ui->internal_Memory->text().toStdString();
    External_Memory_ta = ui->external_memory_lineEdit->text().toStdString();
    speaker_ta = ui->speaker_lineEdit->text().toStdString();
    
    if(ui->have_pen_with_controller->isChecked()){
        have_pen_ta = true;
    }
    if(ui->finger_with_controller->isChecked()){
        biometric_ta1 = true;
    }
    if(ui->face_with_controller->isChecked()){
        biometric_ta2 = true;
    }
    if(ui->iris_with_controller->isChecked()){
        biometric_ta3 = true;
    }
    if(ui->water_proof_with_controller->isChecked()){
        is_waterproof_ta = true;
    }
    
    tablet.setID(cata);
    tablet.setDescription(description);
    tablet.setBrand(brand);
    tablet.setModel(model);
    tablet.setPrice(std::stod(price));
    tablet.setQuantity(std::stoi(quantity));
    tablet.setOnDisplay(true);
    tablet.setDisplay(display);
    tablet.setProcessor(processor);
    tablet.setOs(os);
    tablet.setStorage(storage);
    tablet.setCamera(camera);
    tablet.setBattery(std::stod(battery));
    tablet.setBluetooth(bluetooth);
    tablet.setResolution(std::stoi(resolution_w), std::stoi(resolution_h));
    tablet.setDimensions(std::stod(dimensions_l), std::stod(dimensions_w), std::stod(dimensions_h));
    tablet.setWeight(std::stod(weight));
    tablet.setBrightness(std::stod(brightness));
    tablet.setWifi(wifi);
    tablet.setHavePen(std::stoi(have_pen));
    tablet.setInternal_Memory(internal_memory);
    tablet.setExternal_Memory(external_memory);
    tablet.setSpeaker(speaker);
    tablet.setBiometrics(std::stoi(fingerprint), std::stoi(iris), std::stoi(face));
    tablet.setIsWaterproof(std::stoi(is_waterproof));
    tablet.setImagePath(image_path);
    
    Tablet::updateVec(tablet);
    
    this->close()
    
}

